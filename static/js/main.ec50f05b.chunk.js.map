{"version":3,"sources":["index.js"],"names":["InputField","props","handleValUpdate","bind","e","this","handleUpdate","target","value","name","defaultValue","min","type","onChange","React","Component","OutputField","readOnly","CRField","handleChange","side","Calc","val","key","a","async","oldState","state","PB","parseFloat","inStats","AC","HP","AB","DR","DC","inCR","CR","outCR","outStats","setState","doTheMath","handleCRUpdate","parseInt","newState","monsterMath","crChart","ReactDOM","render","document","getElementById","currentValue","maxThatValueCouldBeAtOurCurrentCR","maxThatValueCouldBeAtTheCRWeAreScalingTo","Math","floor"],"mappings":"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","file":"static/js/main.ec50f05b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// The input fields used to get the old values\nclass InputField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleValUpdate = this.handleValUpdate.bind(this);\n    }\n\n    handleValUpdate(e) {\n        this.props.handleUpdate(e.target.value, this.props.name)\n    }\n\n\n    render() {\n        return(\n        <>\n            <label>{this.props.name} </label>\n            <input\n                defaultValue='0'\n                min='0'\n                type='number'\n                name={this.props.name}\n                onChange={this.handleValUpdate}\n            />\n        </>);\n    }\n}\n\n// The output fields used to display the new values\nclass OutputField extends React.Component {\n    render() {\n        return(\n            <>\n                <input readOnly value={this.props.value}/>\n            </>\n        );\n    }\n}\n\n// The CR fields used to set CR\nclass CRField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.props.handleChange(e.target.value, this.props.side);\n    }\n\n    render() {\n        return(\n            <select onChange={this.handleChange}>\n                <option value='0'>0</option>\n                <option value='1'>0.125</option>\n                <option value='2'>0.25</option>\n                <option value='3'>0.5</option>\n                <option value='4'>1</option>\n                <option value='5'>2</option>\n                <option value='6'>3</option>\n                <option value='7'>4</option>\n                <option value='8'>5</option>\n                <option value='9'>6</option>\n                <option value='10'>7</option>\n                <option value='11'>8</option>\n                <option value='12'>9</option>\n                <option value='13'>10</option>\n                <option value='14'>11</option>\n                <option value='15'>12</option>\n                <option value='16'>13</option>\n                <option value='17'>14</option>\n                <option value='18'>15</option>\n                <option value='19'>16</option>\n                <option value='20'>17</option>\n                <option value='21'>18</option>\n                <option value='22'>19</option>\n                <option value='23'>20</option>\n                <option value='24'>21</option>\n                <option value='25'>22</option>\n                <option value='26'>23</option>\n                <option value='27'>24</option>\n                <option value='28'>25</option>\n                <option value='29'>26</option>\n                <option value='30'>27</option>\n                <option value='31'>28</option>\n                <option value='32'>29</option>\n                <option value='33'>30</option>\n            </select>\n        );\n    }\n}\n\nclass Calc extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inStats: {\n                'PB': 0,\n                'AC': 0,\n                'HP': 0,\n                'AB': 0,\n                'DR': 0,\n                'DC': 0,\n                'CR': 0\n            },\n            outStats: {\n                'PB': 0,\n                'AC': 0,\n                'HP': 0,\n                'AB': 0,\n                'DR': 0,\n                'DC': 0,\n                'CR': 0\n            }\n        };\n        this.handleValUpdate = this.handleValUpdate.bind(this);\n        this.handleCRUpdate = this.handleCRUpdate.bind(this);\n        this.doTheMath = this.doTheMath.bind(this);\n    }\n\n    handleValUpdate = async (val, key) => {\n        const oldState = this.state;\n\n        const PB = key === 'PB' ?  parseFloat(val) : oldState.inStats.PB;\n        const AC = key === 'AC' ?  parseFloat(val) : oldState.inStats.AC;\n        const HP = key === 'HP' ?  parseFloat(val) : oldState.inStats.HP;\n        const AB = key === 'AB' ?  parseFloat(val) : oldState.inStats.AB;\n        const DR = key === 'DR' ?  parseFloat(val) : oldState.inStats.DR;\n        const DC = key === 'DC' ?  parseFloat(val) : oldState.inStats.DC;\n        const inCR = oldState.inStats.CR;\n        const outCR = oldState.outStats.CR;\n        await this.setState({ inStats: {\n            'PB': PB,\n            'AC': AC,\n            'HP': HP,\n            'AB': AB,\n            'DR': DR,\n            'DC': DC,\n            'CR': inCR\n        },\n        outStats: {\n            'PB': PB,\n            'AC': AC,\n            'HP': HP,\n            'AB': AB,\n            'DR': DR,\n            'DC': DC,\n            'CR': outCR\n        }});\n        this.doTheMath()\n    };\n\n    handleCRUpdate = async(val, side) => {\n        const oldState = this.state;\n        const inCR = side === 'in' ? parseInt(val) : oldState.inStats.CR;\n        const outCR = side === 'out' ? parseInt(val) : oldState.outStats.CR;\n\n        await this.setState((props, state) => { return {\n            inStats : {\n                'PB': oldState.inStats.PB,\n                'AC': oldState.inStats.AC,\n                'HP': oldState.inStats.HP,\n                'AB': oldState.inStats.AB,\n                'DR': oldState.inStats.DR,\n                'DC': oldState.inStats.DC,\n                'CR': inCR\n            },\n            outStats: {\n                'PB': oldState.outStats.PB,\n                'AC': oldState.outStats.AC,\n                'HP': oldState.outStats.HP,\n                'AB': oldState.outStats.AB,\n                'DR': oldState.outStats.DR,\n                'DC': oldState.outStats.DC,\n                'CR': outCR\n            }\n            }\n        });\n\n        this.doTheMath();\n    };\n\n    doTheMath = async () => {\n        const oldState = this.state;\n        let newState = {\n            inStats: {\n                'PB': oldState.inStats.PB,\n                'AC': oldState.inStats.AC,\n                'HP': oldState.inStats.HP,\n                'AB': oldState.inStats.AB,\n                'DR': oldState.inStats.DR,\n                'DC': oldState.inStats.DC,\n                'CR': oldState.inStats.CR\n            },\n            outStats: {\n                'PB': monsterMath(parseFloat(oldState.inStats.PB), crChart[oldState.inStats.CR].PB, crChart[oldState.outStats.CR].PB),\n                'AC': monsterMath(parseFloat(oldState.inStats.AC), crChart[oldState.inStats.CR].AC, crChart[oldState.outStats.CR].AC),\n                'HP': monsterMath(parseFloat(oldState.inStats.HP), crChart[oldState.inStats.CR].HP, crChart[oldState.outStats.CR].HP),\n                'AB': monsterMath(parseFloat(oldState.inStats.AB), crChart[oldState.inStats.CR].AB, crChart[oldState.outStats.CR].AB),\n                'DR': monsterMath(parseFloat(oldState.inStats.DR), crChart[oldState.inStats.CR].DR, crChart[oldState.outStats.CR].DR),\n                'DC': monsterMath(parseFloat(oldState.inStats.DC), crChart[oldState.inStats.CR].DC, crChart[oldState.outStats.CR].DC),\n                'CR': oldState.outStats.CR\n            }\n        };\n        await this.setState((props, state) => newState);\n    };\n\n    render() {\n        return(\n            <>\n                <label>CR </label>\n                <CRField side='in' handleChange={this.handleCRUpdate}/> <CRField side='out' handleChange={this.handleCRUpdate}/> <br/>\n                <InputField name='PB' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.PB}/> <br/>\n                <InputField name='AC' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.AC}/> <br/>\n                <InputField name='HP' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.HP}/> <br/>\n                <InputField name='AB' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.AB}/> <br/>\n                <InputField name='DR' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.DR}/> <br/>\n                <InputField name='DC' handleUpdate={this.handleValUpdate}/> <OutputField value={this.state.outStats.DC}/> <br/>\n            </>\n        )\n    }\n}\n\nReactDOM.render(\n    <Calc/>,\n    document.getElementById('root')\n);\n\n// This is the CR chart with all of the max values\nconst crChart = [\n    {CR: 0, PB: 2, AC: 13, HP: 6, AB: 3, DR: 1, DC: 13},\n    {CR: 0.125, PB: 2, AC: 13, HP: 35, AB: 3, DR: 3, DC: 13},\n    {CR: 0.25, PB: 2, AC: 13, HP: 49, AB: 3, DR: 5, DC: 13},\n    {CR: 0.5, PB: 2, AC: 13, HP: 70, AB: 3, DR: 8, DC: 13},\n    {CR: 1, PB: 2, AC: 13, HP: 85, AB: 3, DR: 14, DC: 13},\n    {CR: 2, PB: 2, AC: 13, HP: 100, AB: 3, DR: 20, DC: 13},\n    {CR: 3, PB: 2, AC: 13, HP: 115, AB: 4, DR: 26, DC: 13},\n    {CR: 4, PB: 2, AC: 14, HP: 130, AB: 5, DR: 32, DC: 14},\n    {CR: 5, PB: 3, AC: 15, HP: 145, AB: 6, DR: 28, DC: 15},\n    {CR: 6, PB: 3, AC: 15, HP: 160, AB: 6, DR: 44, DC: 15},\n    {CR: 7, PB: 3, AC: 15, HP: 175, AB: 6, DR: 50, DC: 15},\n    {CR: 8, PB: 3, AC: 16, HP: 190, AB: 7, DR: 56, DC: 16},\n    {CR: 9, PB: 4, AC: 16, HP: 205, AB: 7, DR: 62, DC: 16},\n    {CR: 10, PB: 4, AC: 17, HP: 220, AB: 7, DR: 68, DC: 16},\n    {CR: 11, PB: 4, AC: 17, HP: 235, AB: 8, DR: 74, DC: 17},\n    {CR: 12, PB: 4, AC: 17, HP: 250, AB: 8, DR: 80, DC: 17},\n    {CR: 13, PB: 5, AC: 18, HP: 265, AB: 8, DR: 86, DC: 18},\n    {CR: 14, PB: 5, AC: 18, HP: 280, AB: 8, DR: 92, DC: 18},\n    {CR: 15, PB: 5, AC: 18, HP: 295, AB: 8, DR: 98, DC: 18},\n    {CR: 16, PB: 5, AC: 18, HP: 310, AB: 9, DR: 104, DC: 18},\n    {CR: 17, PB: 6, AC: 19, HP: 325, AB: 10, DR: 110, DC: 19},\n    {CR: 18, PB: 6, AC: 19, HP: 340, AB: 10, DR: 116, DC: 19},\n    {CR: 19, PB: 6, AC: 19, HP: 355, AB: 10, DR: 122, DC: 19},\n    {CR: 20, PB: 6, AC: 19, HP: 400, AB: 10, DR: 140, DC: 19},\n    {CR: 21, PB: 7, AC: 19, HP: 445, AB: 11, DR: 158, DC: 20},\n    {CR: 22, PB: 7, AC: 19, HP: 490, AB: 11, DR: 176, DC: 20},\n    {CR: 23, PB: 7, AC: 19, HP: 535, AB: 11, DR: 194, DC: 20},\n    {CR: 24, PB: 7, AC: 19, HP: 580, AB: 12, DR: 212, DC: 21},\n    {CR: 25, PB: 8, AC: 19, HP: 625, AB: 12, DR: 230, DC: 21},\n    {CR: 26, PB: 8, AC: 19, HP: 670, AB: 12, DR: 248, DC: 21},\n    {CR: 27, PB: 8, AC: 19, HP: 715, AB: 13, DR: 266, DC: 22},\n    {CR: 28, PB: 8, AC: 19, HP: 760, AB: 13, DR: 284, DC: 22},\n    {CR: 29, PB: 9, AC: 19, HP: 805, AB: 13, DR: 302, DC: 22},\n    {CR: 30, PB: 9, AC: 19, HP: 850, AB: 14, DR: 320, DC: 23}\n];\n\n// Do the monster math\nfunction monsterMath(currentValue, maxThatValueCouldBeAtOurCurrentCR, maxThatValueCouldBeAtTheCRWeAreScalingTo) {\n    return Math.floor(currentValue / maxThatValueCouldBeAtOurCurrentCR * maxThatValueCouldBeAtTheCRWeAreScalingTo);\n}"],"sourceRoot":""}